
CC = @CC@
CXX = @CXX@
AR = @AR@
CPPFLAGS = @CPPFLAGS@
CFLAGS = @CFLAGS@
CXXFLAGS = @CXXFLAGS@
LDFLAGS = @LDFLAGS@
INSTALL = @INSTALL@

TARGETS =

ifeq (@lclib_cxx_build_shared@,yes)
TARGETS += shared
endif

ifeq (@lclib_cxx_build_static@,yes)
TARGETS += static
endif

ifeq ($(TARGETS),)
$(error Must configure with at least one target. Reconfigure without either --disable-shared or --disable-static)
endif


INSTALL_TARGETS = $(foreach target,$(TARGETS),install-$(target))

SRCDIR = @srcdir@
BUILDDIR = @builddir@
OUTDIR = $(BUILDDIR)/out

INCLUDES = $(SRCDIR)/include
LIBDIRS =
LIBRARIES = m

CDIALECT = c11
CXXDIALECT = c++17

ALL_CPPFLAGS = -pthread $(foreach include,$(INCLUDES),-I$(include))
ALL_CFLAGS = -std=$(CDIALECT) $(CFLAGS) -fPIC
ALL_CXXFLAGS = -std=$(CXXDIALECT) $(CXXFLAGS) -fPIC
ALL_LDFLAGS = -pthread -shared $(foreach libdir,$(LIBDIRS),-L$(libdir)) $(LDFLAGS)

prefix = @prefix@

OUTPUT = liblc-c++.so
ARCHIVE_OUTPUT = liblc-c++.a
OBJECTS = $(OUTDIR)/IOWrapper.o

all: $(TARGETS)

shared: $(OUTPUT)

static: $(ARCHIVE_OUTPUT)

$(OUTPUT): $(OBJECTS) | Makefile
	$(CXX) $(ALL_LDFLAGS) -o $@ $^ $(foreach library,$(LIBRARIES),-l$(library))

$(ARCHIVE_OUTPUT): $(OBJECTS) | Makefile
	ar rcs $@ $^

Makefile: $(SRCDIR)/Makefile.in config.status
	./config.status Makefile

config.status: $(SRCDIR)/configure
	./config.status --recheck


$(OUTDIR)/:
	mkdir $(OUTDIR)

$(OUTDIR)/%.o: $(SRCDIR)/src/%.cpp | $(OUTDIR)/
	$(CXX) $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) -c -o $@ $^

$(OUTDIR)/%.o: $(SRCDIR)/src/%.c | $(OUTDIR)/
	$(CC) $(ALL_CPPFLAGS) $(ALL_CFLAGS) -c -o $@ $^

clean:
	rm -rf $(OUTPUT) $(OUTDIR)/

distclean: clean
	rm -f Makefile config.status config.log

distclean: clean
	rm -f Makefile config.status config.log

install: install-headers $(INSTALL_TARGETS)

install-headers:
	$(INSTALL) -m755 @srcdir@/include/* @includedir@

install-shared: $(OUTPUT)
	$(INSTALL) -m644 $(OUTPUT) @libdir@

install-static: $(ARCHIVE_OUTPUT)
	$(INSTALL) -m644 $(ARCHIVE_OUTPUT) @libdir@



	
